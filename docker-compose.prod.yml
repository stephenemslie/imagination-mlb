version: '3.2'
services:

    nginx:
        image: jwilder/nginx-proxy
        ports:
            - "80:80"
        restart: always
        volumes:
            - "/var/run/docker.sock:/tmp/docker.sock:ro"

    postgres:
        restart: always
        volumes:
            - "pgdata:/var/lib/postgresql/data"
        environment:
            POSTGRES_PASSWORD_FILE: '/run/secrets/POSTGRES_PASSWORD'
        secrets:
            - POSTGRES_PASSWORD

    postgres-backup:
        restart: always
        build:
            context: ./postgres_backup
        depends_on:
            - postgres
        environment:
            SCHEDULE: "@daily"
            S3_BUCKET: mlb-backups
            S3_PREFIX: 'postgresql-nuc'
            POSTGRES_DATABASE: postgres
            POSTGRES_USER: postgres
            POSTGRES_HOST: postgres
        secrets:
            - POSTGRES_PASSWORD
            - S3_SECRET_ACCESS_KEY
            - S3_ACCESS_KEY_ID

    jenkins:
        image: shimmi/jenkins:latest
        restart: always
        ports:
            - "8082:8080"
        volumes:
            - jenkins-home:/var/jenkins_home
            - /var/secrets:/var/secrets
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            VIRTUAL_HOST: mlb-jenkins.imagination.net

    django:
        environment:
            DEBUG: 'False'
            GUNICORN_CMD_ARGS: '--bind=0.0.0.0:8000 --workers=2'
            VIRTUAL_HOST: mlb-queue.imagination.net
            DJANGO_ALLOWED_HOSTS: "*"
            CORS_ORIGIN_ALLOW_ALL: 'True'
        ports:
            - "8000:8000"
        depends_on:
            - nginx
        command: gunicorn
        restart: always
        secrets:
            - SECRET_KEY
            - DATABASE_URL
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - SLACK_TOKEN

    celery:
        environment:
            DEBUG: 'False'
        restart: always
        secrets:
            - SECRET_KEY
            - DATABASE_URL
            - AWS_ACCESS_KEY_ID
            - AWS_SECRET_ACCESS_KEY
            - SLACK_TOKEN

volumes:
    pgdata:
    jenkins-home:

secrets:
    SECRET_KEY:
        file: /var/secrets/secret_key
    DATABASE_URL:
        file: /var/secrets/database_url
    AWS_ACCESS_KEY_ID:
        file: /var/secrets/aws_access_key_id
    AWS_SECRET_ACCESS_KEY:
        file: /var/secrets/aws_secret_access_key
    POSTGRES_PASSWORD:
        file: /var/secrets/postgres_password
    S3_ACCESS_KEY_ID:
        file: /var/secrets/aws_access_key_id
    S3_SECRET_ACCESS_KEY:
        file: /var/secrets/aws_secret_access_key
    SLACK_TOKEN:
        file: /var/secrets/slack_token
