version: '3.2'
services:

    nginx:
        image: jwilder/nginx-proxy
        ports:
            - "80:80"
        volumes:
            - "/var/run/docker.sock:/tmp/docker.sock:ro"

    postgres:
        restart: always
        env_file: /var/secrets/env
        volumes:
            - "pgdata:/var/lib/postgresql/data"

    postgres-backup:
        image: schickling/postgres-backup-s3:latest
        restart: always
        depends_on:
            - postgres
        environment:
            SCHEDULE: "@daily"
            S3_BUCKET: mlb-backups
            S3_PREFIX: 'postgresql-nuc'
            POSTGRES_DATABASE: postgres
            POSTGRES_USER: postgres
            POSTGRES_HOST: postgres
        env_file: /var/secrets/env

    jenkins:
        image: shimmi/jenkins:latest
        restart: always
        user: root
        volumes:
            - jenkins-home:/var/jenkins_home
            - /var/secrets/env:/var/secrets/env
            - /var/run/docker.sock:/var/run/docker.sock
        environment:
            VIRTUAL_HOST: mlb-jenkins.imagination.net
            VIRTUAL_PORT: "8080"

    django:
        environment:
            DEBUG: 'False'
            GUNICORN_CMD_ARGS: '--bind=0.0.0.0:8000 --workers=2'
            VIRTUAL_HOST: mlb-queue.imagination.net
            DJANGO_ALLOWED_HOSTS: "*"
            CORS_ORIGIN_ALLOW_ALL: 'True'
        ports:
            - "8000:8000"
        depends_on:
            - nginx
        command: gunicorn
        restart: always
        env_file: /var/secrets/env

    celery:
        environment:
            DEBUG: 'False'
        restart: always
        env_file: /var/secrets/env

volumes:
    pgdata:
    jenkins-home:
