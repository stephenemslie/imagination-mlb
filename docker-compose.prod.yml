version: '3.2'
services:
    registry:
        image: registry:2
        restart: always
        ports:
            - 5000:5000
        deploy:
            placement:
                constraints:
                    - node.role == manager
    nginx:
        image: jwilder/nginx-proxy
        ports:
            - 80:80
        restart: always
        volumes:
            - "/var/run/docker.sock:/tmp/docker.sock:ro"
    postgres:
        restart: always
        deploy:
            placement:
                constraints:
                    - node.role == manager
    postgres-backup:
        image: schickling/postgres-backup-s3
        env_file: .env
        depends_on:
            - postgres
        environment:
            SCHEDULE: "@daily"
            S3_BUCKET: mlb-backups
            S3_PREFIX: 'postgresql'
            POSTGRES_DATABASE: postgres
            POSTGRES_USER: postgres
            POSTGRES_HOST: postgres

    django:
        environment:
            DEBUG: 'False'
            GUNICORN_CMD_ARGS: '--bind=0.0.0.0:8000 --workers=2'
            VIRTUAL_HOST: mlb-queue.imagination.net
            DJANGO_ALLOWED_HOSTS: mlb-queue.imagination.net
        depends_on:
            - postgres
            - nginx
        command: gunicorn
        restart: always
        deploy:
            mode: global

secrets:
    SECRET_KEY:
        external: true
    DATABASE_URL:
        external: true
    AWS_ACCESS_KEY_ID:
        external: true
    AWS_SECRET_ACCESS_KEY:
        external: true
    S3_ACCESS_KEY_ID:
        external: true
    S3_SECRET_ACCESS_KEY:
        external: true
